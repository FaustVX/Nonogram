<Window x:Class="Nonogram.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Nonogram.WPF"
        xmlns:conv="clr-namespace:Nonogram.WPF.Converters"
        xmlns:ctrl="clr-namespace:Nonogram.WPF.Controls"
        xmlns:dp="clr-namespace:Nonogram.WPF.DependencyProperties"
        xmlns:core="clr-namespace:Nonogram;assembly=Nonogram.Core"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        x:Name="This"
        DataContext="{Binding Nonogram, Mode=OneWay, RelativeSource={RelativeSource Self}}"
        mc:Ignorable="d"
        KeyUp="This_KeyUp"
        dp:UndoRedo.UndoRedo="{Binding}"
        dp:Size.CellSize="17.5"
        SizeToContent="WidthAndHeight"
        Background="#202020"
        Title="Nonogram"
        StateChanged="This_StateChanged"
        Closing="This_Closing">
    <Window.Resources>
        <conv:DebugConverter x:Key="DebugConverter"/>
        <conv:EmptyCollectionConverter x:Key="EmptyCollectionConverter"/>
        <conv:ICellToForegroundConverter x:Key="ICellToForegroundConverter"/>
        <conv:ICellToBackgroundConverter SealedBrush="Gray" x:Key="ICellToBackgroundConverter"/>
        <conv:SelectedColorConverter x:Key="SelectedColorConverter"/>
        <conv:HoveredToBrushConverter HoveredBrush="DarkGray" x:Key="HoveredToBrushConverter"/>
        <conv:MultiplyConverter x:Key="IsCorrectSize"/>
        <DataTemplate x:Key="Hints">
            <Border BorderThickness="0" CornerRadius="3" Focusable="False"
                    ToolTip="{Binding Total}"
                    Width="{Binding (dp:Size.CellSize), ElementName=This}"
                    Height="{Binding (dp:Size.CellSize), ElementName=This}">
                <Border.Background>
                    <LinearGradientBrush>
                        <GradientStop Color="{Binding Value.Color}" Offset="0.75"/>
                        <GradientStop Color="Gray" Offset="0"/>
                    </LinearGradientBrush>
                </Border.Background>
                <ctrl:OutlinedTextBlock StrokePosition="Outside" TextAlignment="Center" StrokeThickness="1.25"
                       FontSize="{Binding (dp:Size.CellSize), Converter={StaticResource IsCorrectSize}, ConverterParameter=0.75, ElementName=This}"
                       Text="{Binding Total}">
                    <FrameworkElement.Resources>
                        <Style TargetType="ctrl:OutlinedTextBlock">
                            <Setter Property="Fill" Value="White"/>
                            <Setter Property="Stroke" Value="Black"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Validated}" Value="True">
                                    <Setter Property="Fill" Value="DimGray"/>
                                    <Setter Property="Stroke" Value="White"/>
                                    <Setter Property="FontStyle" Value="Italic"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </FrameworkElement.Resources>
                </ctrl:OutlinedTextBlock>
            </Border>
        </DataTemplate>
        <conv:BoolConverter Type="{x:Type Visibility}" False="{x:Static Visibility.Visible}" True="{x:Static Visibility.Collapsed}" x:Key="VisibilityCollapsed"/>
        <conv:BoolConverter Type="{x:Type Visibility}" False="{x:Static Visibility.Visible}" True="{x:Static Visibility.Hidden}" x:Key="VisibilityHidden"/>
        <conv:HintsSumConverter x:Key="HintSumConverter" StringFormat="The Total is: {0}"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <ProgressBar Grid.Row="0" Grid.ColumnSpan="2"
                     Value="{Binding ColoredCellCount}"
                     Maximum="{Binding TotalColoredCell}"
                     IsIndeterminate="{Binding IsComplete}"
                     Visibility="{Binding IsCorrect, Converter={StaticResource VisibilityCollapsed}}"/>

        <TextBlock Grid.Row="0" Grid.ColumnSpan="2" TextAlignment="Center"
                     Visibility="{Binding IsCorrect, Converter={StaticResource VisibilityCollapsed}}">
            <TextBlock.Text>
                <MultiBinding StringFormat="W:{0} * H:{1} ({2} / {3} cells {4:p1})" Mode="OneWay">
                    <Binding Path="Width" Mode="OneWay"/>
                    <Binding Path="Height" Mode="OneWay"/>
                    <Binding Path="ColoredCellCount" Mode="OneWay"/>
                    <Binding Path="TotalColoredCell" Mode="OneWay"/>
                    <Binding Path="Percent" Mode="OneWay"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>

        <ItemsControl Grid.Row="1">
            <FrameworkElement.Resources>
                <Style TargetType="ButtonBase" x:Key="Style">
                    <Setter Property="Margin" Value="1.5"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Visibility" Value="{Binding IsCorrect, Converter={StaticResource VisibilityCollapsed}}"/>
                    <Setter Property="BorderBrush" Value="DarkGray"/>
                    <Setter Property="BorderThickness" Value="3"/>
                    <Setter Property="Foreground" Value="DarkGray"/>
                    <Setter Property="Background" Value="#303030"/>
                    <Setter Property="Height" Value="30"/>
                </Style>
                <Style TargetType="Button" BasedOn="{StaticResource Style}"/>
                <Style TargetType="ToggleButton" BasedOn="{StaticResource Style}"/>
                <sys:Int32 x:Key="True">3</sys:Int32>
                <sys:Int32 x:Key="False">4</sys:Int32>
            </FrameworkElement.Resources>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="{Binding ElementName=This, Path=Nonogram.IsCorrect, Converter={conv:BoolConverter Type={x:Type sys:Int32}, True={StaticResource True}, False={StaticResource False}}}"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <Button Content="New" Click="NewClick" Visibility="Visible"/>
            <Button Content="Save Image" Click="SaveImage" Visibility="Visible"/>
            <Button Content="Save" Click="SaveClick"/>
            <Button Content="Load" Click="LoadClick" Visibility="Visible"/>
            <ToggleButton Content="Measure" IsChecked="{Binding (dp:Measure.IsStarted), Mode=TwoWay, ElementName=This}"/>
            <Button Content="Box" Click="BoxClick"/>
            <Button Content="Tips" Click="TipsButtonClick"/>
            <ToggleButton Content="Auto-Seal" IsChecked="{Binding AutoSeal, Mode=TwoWay}"/>
        </ItemsControl>

        <Grid Grid.Row="3" Grid.Column="1" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ListBox Grid.Row="0" Grid.Column="0" BorderThickness="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Background="Transparent" x:Name="colors"
                 dp:CanBeSelected.IsSelector="{Binding PossibleColors}"
                 Visibility="{Binding IsCorrect, Converter={StaticResource VisibilityCollapsed}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="1"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border CornerRadius="3"
                                dp:CanBeSelected.IsLocked="{Binding Validated, Mode=OneWay}"
                                dp:CanBeSelected.IsColor="{Binding}"
                                Background="{Binding Value}">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                    <Setter Property="BorderThickness" Value="2"/>
                                    <Style.Triggers>
                                        <Trigger Property="dp:CanBeSelected.IsLocked" Value="True">
                                            <Setter Property="BorderBrush" Value="White"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <FrameworkElement.ToolTip>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="Cells: {0} / {1}">
                                            <Binding Path="Current"/>
                                            <Binding Path="Total"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </FrameworkElement.ToolTip>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <ctrl:OutlinedTextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" TextAlignment="Center" Fill="Black"
                                                        StrokePosition="Outside" Stroke="White" StrokeThickness="2" FontWeight="Bold" FontSize="15"
                                                        Text="{Binding Current}"/>
                                <Border Grid.Column="1" Grid.Row="0" BorderBrush="White" BorderThickness="1,0" Background="Black" Padding="1"/>
                                <ctrl:OutlinedTextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" TextAlignment="Center" Fill="Black"
                                                        StrokePosition="Outside" Stroke="White" StrokeThickness="2" FontWeight="Bold" FontSize="15"
                                                        Text="{Binding Total}"/>
                                <ProgressBar Grid.ColumnSpan="3" Grid.Row="1" Height="2"
                                             Value="{Binding Current}"
                                             Maximum="{Binding Total}"
                                             Visibility="{Binding Validated, Converter={StaticResource VisibilityHidden}}"/>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <FrameworkElement.Resources>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Opacity" Value="0.3333"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="2"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Trigger.Setters>
                                    <Setter Property="Opacity" Value="1.0"/>
                                </Trigger.Setters>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.Setters>
                                    <Setter Property="Opacity" Value="0.75"/>
                                </Trigger.Setters>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </FrameworkElement.Resources>
            </ListBox>

            <ItemsControl Grid.Column="0" Grid.Row="1" ItemsSource="{Binding RowHints}" Visibility="{Binding IsCorrect, Converter={StaticResource VisibilityCollapsed}}" Margin="0,3">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border BorderThickness="3,.5,3,.5" CornerRadius="2" dp:ColRow.Row="0" Padding="1,0,2,0" Margin="0,0,2,0" HorizontalAlignment="Right"
                                dp:ColRow.Source="{Binding ElementName=This}"
                                Background="{Binding IsGroupInvalid, Converter={conv:BoolConverter Type=SolidColorBrush, True={x:Static Brushes.Red}, False={x:Static Brushes.Transparent}}}"
                                ToolTip="{Binding Converter={StaticResource HintSumConverter}, ConverterParameter=1}">
                            <Border.BorderBrush>
                                <MultiBinding Converter="{StaticResource HoveredToBrushConverter}">
                                    <Binding RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="(dp:ColRow.HoverY)" ElementName="This"/>
                                </MultiBinding>
                            </Border.BorderBrush>
                            <ItemsControl ItemsSource="{Binding Converter={StaticResource EmptyCollectionConverter}}" ItemTemplate="{StaticResource Hints}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <ItemsControl Grid.Column="1" Grid.Row="0" ItemsSource="{Binding ColHints}" Visibility="{Binding IsCorrect, Converter={StaticResource VisibilityCollapsed}}" Margin="3,0">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border BorderThickness=".5,3,.5,3" CornerRadius="2" dp:ColRow.Col="0" Padding="0,1,0,2" Margin="0,0,0,2" VerticalAlignment="Bottom"
                                dp:ColRow.Source="{Binding ElementName=This}"
                                ToolTip="{Binding Converter={StaticResource HintSumConverter}, ConverterParameter=1}">
                            <Border.BorderBrush>
                                <MultiBinding Converter="{StaticResource HoveredToBrushConverter}">
                                    <Binding RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="(dp:ColRow.HoverX)" ElementName="This"/>
                                </MultiBinding>
                            </Border.BorderBrush>
                            <ItemsControl ItemsSource="{Binding Converter={StaticResource EmptyCollectionConverter}}" ItemTemplate="{StaticResource Hints}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" VerticalAlignment="Bottom"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <Border Grid.Column="1" Grid.Row="1" BorderThickness="2" CornerRadius="2" Padding="1">
                <Border.BorderBrush>
                    <MultiBinding Converter="{StaticResource SelectedColorConverter}">
                        <Binding Path="(dp:CanBeSelected.IsSelector)" ElementName="colors" Mode="OneWay"/>
                        <Binding Path="(dp:CanBeSelected.SelectedColor)" ElementName="This" Mode="OneWay"/>
                    </MultiBinding>
                </Border.BorderBrush>
                <ItemsControl ItemsSource="{Binding}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ctrl:UniformGrid Orientation="Horizontal"
                                              Columns="{Binding Width, Mode=OneWay}"
                                              Rows="{Binding Height, Mode=OneWay}"
                                              SnapsToDevicePixels="{Binding Nonogram.IsCorrect, ElementName=This}"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type core:ICell}">
                            <Border BorderBrush="Gray" BorderThickness="0"
                                    CornerRadius="{Binding Nonogram.IsCorrect, Converter={conv:BoolConverter sys:Double, False=2, True=0}, Mode=OneWay, ElementName=This}"
                                    MouseDown="CellMouseDown"
                                    MouseEnter="CellMouseEnter"
                                    dp:Measure.Tool="{Binding ElementName=This}"
                                    Initialized="CellInitialized">
                                <Border.Background>
                                    <MultiBinding Converter="{StaticResource ICellToBackgroundConverter}">
                                        <Binding/>
                                        <Binding Path="(dp:CanBeSelected.IsSelector)" ElementName="colors" Mode="OneWay"/>
                                        <Binding Path="(dp:CanBeSelected.SelectedColor)" ElementName="This" Mode="OneWay"/>
                                        <Binding Path="Nonogram.IsCorrect" ElementName="This" Mode="OneWay"/>
                                    </MultiBinding>
                                </Border.Background>
                                <FrameworkElement.Width>
                                    <MultiBinding Converter="{StaticResource IsCorrectSize}" ConverterParameter="2">
                                        <Binding Path="Nonogram.IsCorrect" ElementName="This" Mode="OneWay"/>
                                        <Binding Path="(dp:Size.CellSize)" ElementName="This" Mode="OneWay"/>
                                    </MultiBinding>
                                </FrameworkElement.Width>
                                <FrameworkElement.Height>
                                    <MultiBinding Converter="{StaticResource IsCorrectSize}" ConverterParameter="2">
                                        <Binding Path="Nonogram.IsCorrect" ElementName="This" Mode="OneWay"/>
                                        <Binding Path="(dp:Size.CellSize)" ElementName="This" Mode="OneWay"/>
                                    </MultiBinding>
                                </FrameworkElement.Height>
                                <TextBlock Text="X" TextAlignment="Center" Background="Transparent">
                                    <TextBlock.Foreground>
                                        <MultiBinding Converter="{StaticResource ICellToForegroundConverter}">
                                            <Binding/>
                                            <Binding Path="(dp:CanBeSelected.IsSelector)" ElementName="colors" Mode="OneWay"/>
                                            <Binding Path="(dp:CanBeSelected.SelectedColor)" ElementName="This" Mode="OneWay"/>
                                            <Binding Path="Nonogram.IsCorrect" ElementName="This" Mode="OneWay"/>
                                        </MultiBinding>
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </Grid>
    </Grid>
</Window>
