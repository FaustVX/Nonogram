<Window x:Class="Nonogram.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Nonogram.WPF"
        xmlns:conv="clr-namespace:Nonogram.WPF.Converters"
        xmlns:ctrl="clr-namespace:Nonogram.WPF.Controls"
        xmlns:dp="clr-namespace:Nonogram.WPF.DependencyProperties"
        xmlns:core="clr-namespace:Nonogram;assembly=Nonogram.Core"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        x:Name="This"
        DataContext="{Binding Nonogram, Mode=OneWay, RelativeSource={RelativeSource Self}}"
        mc:Ignorable="d"
        KeyUp="This_KeyUp"
        dp:UndoRedo.UndoRedo="{Binding}"
        dp:Size.CellSize="15"
        dp:CanBeSelected.SelectedColor="0"
        SizeToContent="WidthAndHeight"
        Background="Gray"
        Title="Nonogram"
        StateChanged="This_StateChanged">
    <Window.Resources>
        <conv:DebugConverter x:Key="DebugConverter"/>
        <conv:TupleConverter x:Key="TupleConverter"/>
        <conv:EmptyCollectionConverter x:Key="EmptyCollectionConverter"/>
        <conv:ICellToForegroundConverter x:Key="ICellToForegroundConverter"/>
        <conv:ICellToBackgroundConverter SealedBrush="Gray" x:Key="ICellToBackgroundConverter"/>
        <conv:HoveredToBrushConverter HoveredBrush="Black" x:Key="HoveredToBrushConverter"/>
        <conv:ChainConverter x:Key="BoolToBrushConverter">
            <StaticResource ResourceKey="TupleConverter"/>
            <conv:BoolConverter Type="{x:Type Brush}" True="{x:Static Brushes.LightGray}" False="{x:Static Brushes.Black}"/>
        </conv:ChainConverter>
        <conv:ChainConverter x:Key="BrushToColorConverter">
            <StaticResource ResourceKey="TupleConverter"/>
            <conv:BrushToColorConverter/>
        </conv:ChainConverter>
        <DataTemplate x:Key="Hints">
            <Border BorderThickness="0" CornerRadius="3">
                <Border.Background>
                    <LinearGradientBrush>
                        <GradientStop Color="{Binding Converter={StaticResource BrushToColorConverter}, ConverterParameter=0}" Offset="0.75"/>
                        <GradientStop Color="Gray" Offset="0"/>
                    </LinearGradientBrush>
                </Border.Background>
                <TextBlock Text="{Binding Converter={StaticResource TupleConverter}, ConverterParameter=1}"
                       Foreground="{Binding Converter={StaticResource BoolToBrushConverter}, ConverterParameter=2}"
                       Width="{Binding (dp:Size.CellSize), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"
                       Height="{Binding (dp:Size.CellSize), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"
                       TextAlignment="Center"
                       ToolTip="{Binding Converter={StaticResource TupleConverter}, ConverterParameter=1}"/>
            </Border>
        </DataTemplate>
        <conv:BoolConverter Type="{x:Type Visibility}" False="{x:Static Visibility.Visible}" True="{x:Static Visibility.Collapsed}" x:Key="IsCorrectVisibility"/>
        <conv:MultiplyConverter x:Key="IsCorrectSize"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" TextAlignment="Center">
            <TextBlock.Text>
                <MultiBinding StringFormat="W:{0} * H:{1} ({2} / {3} cells)" Mode="OneWay">
                    <Binding Path="Width" Mode="OneWay"/>
                    <Binding Path="Height" Mode="OneWay"/>
                    <Binding Path="ColoredCellCount" Mode="OneWay"/>
                    <Binding Path="TotalColoredCell" Mode="OneWay"/>
                </MultiBinding>
            </TextBlock.Text>
        </TextBlock>

        <ListBox BorderThickness="0" Grid.Row="1" HorizontalAlignment="Left" Background="Transparent" x:Name="colors"
                 dp:CanBeSelected.IsSelector="{Binding PossibleColors}"
                 Visibility="{Binding IsCorrect, Converter={StaticResource IsCorrectVisibility}}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border CornerRadius="2" dp:CanBeSelected.IsLocked="False" dp:CanBeSelected.IsColor="{Binding}"
                            Width="{Binding (dp:Size.CellSize), Converter={StaticResource IsCorrectSize}, ConverterParameter=1.5, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"
                            Height="{Binding (dp:Size.CellSize), Converter={StaticResource IsCorrectSize}, ConverterParameter=1.5, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="2"/>
                                <Style.Triggers>
                                    <Trigger Property="dp:CanBeSelected.IsLocked" Value="True">
                                        <Setter Property="BorderBrush" Value="White"/>
                                        <Setter Property="BorderThickness" Value="5"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Canvas Background="{Binding}"/>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <FrameworkElement.Resources>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Opacity" Value="0.3333"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="2"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.Setters>
                                <Setter Property="Opacity" Value="1.0"/>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter Property="Opacity" Value="0.75"/>
                            </Trigger.Setters>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </FrameworkElement.Resources>
        </ListBox>

        <ItemsControl Grid.Row="1" HorizontalAlignment="Right">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <FrameworkElement.Resources>
                <Style TargetType="ButtonBase" x:Key="Style">
                    <Setter Property="Margin" Value="1.5"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Visibility" Value="{Binding IsCorrect, Converter={StaticResource IsCorrectVisibility}}"/>
                </Style>
                <Style TargetType="Button" BasedOn="{StaticResource Style}"/>
                <Style TargetType="ToggleButton" BasedOn="{StaticResource Style}"/>
            </FrameworkElement.Resources>

            <Button Content="New" Click="NewClick" Visibility="Visible"/>
            <Button Content="Box" Click="BoxClick"/>
            <Button Content="Tips" Click="TipsButtonClick"/>
            <ToggleButton Content="Auto-Seal" IsChecked="{Binding AutoSeal, Mode=TwoWay}"/>
        </ItemsControl>

        <Grid Grid.Row="2" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ItemsControl Grid.Column="0" Grid.Row="1" ItemsSource="{Binding RowHints}" Visibility="{Binding IsCorrect, Converter={StaticResource IsCorrectVisibility}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border BorderThickness="0.5" CornerRadius="2" dp:ColRow.Row="0">
                            <Border.BorderBrush>
                                <MultiBinding Converter="{StaticResource HoveredToBrushConverter}">
                                    <Binding RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="HoverY" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}"/>
                                </MultiBinding>
                            </Border.BorderBrush>
                            <ItemsControl ItemsSource="{Binding Converter={StaticResource EmptyCollectionConverter}}" ItemTemplate="{StaticResource Hints}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <ItemsControl Grid.Column="1" Grid.Row="0" ItemsSource="{Binding ColHints}" Visibility="{Binding IsCorrect, Converter={StaticResource IsCorrectVisibility}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border BorderThickness="0.5" CornerRadius="2" dp:ColRow.Col="0">
                            <Border.BorderBrush>
                                <MultiBinding Converter="{StaticResource HoveredToBrushConverter}">
                                    <Binding RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="HoverX" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}"/>
                                </MultiBinding>
                            </Border.BorderBrush>
                            <ItemsControl ItemsSource="{Binding Converter={StaticResource EmptyCollectionConverter}}" ItemTemplate="{StaticResource Hints}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" VerticalAlignment="Bottom"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <ItemsControl Grid.Column="1" Grid.Row="1" ItemsSource="{Binding}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ctrl:UniformGrid Orientation="Horizontal"
                            Columns="{Binding Width, Mode=OneWay}"
                            Rows="{Binding Height, Mode=OneWay}"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type core:ICell}">
                        <Border
                            BorderBrush="Gray"
                            BorderThickness="0"
                            CornerRadius="{Binding Nonogram.IsCorrect, Converter={conv:BoolConverter sys:Double, False=2, True=0}, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"
                            MouseDown="CellMouseDown"
                            MouseEnter="CellMouseEnter"
                            Initialized="CellInitialized">
                            <Border.Background>
                                <MultiBinding Converter="{StaticResource ICellToBackgroundConverter}">
                                    <Binding/>
                                    <Binding Path="(dp:CanBeSelected.IsSelector)" ElementName="colors" Mode="OneWay"/>
                                    <Binding Path="(dp:CanBeSelected.SelectedColor)" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}" Mode="OneWay"/>
                                    <Binding Path="Nonogram.IsCorrect" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}" Mode="OneWay"/>
                                </MultiBinding>
                            </Border.Background>
                            <FrameworkElement.Width>
                                <MultiBinding Converter="{StaticResource IsCorrectSize}" ConverterParameter="2">
                                    <Binding Path="Nonogram.IsCorrect" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}" Mode="OneWay"/>
                                    <Binding Path="(dp:Size.CellSize)" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}" Mode="OneWay"/>
                                </MultiBinding>
                            </FrameworkElement.Width>
                            <FrameworkElement.Height>
                                <MultiBinding Converter="{StaticResource IsCorrectSize}" ConverterParameter="2">
                                    <Binding Path="Nonogram.IsCorrect" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}" Mode="OneWay"/>
                                    <Binding Path="(dp:Size.CellSize)" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}" Mode="OneWay"/>
                                </MultiBinding>
                            </FrameworkElement.Height>
                            <TextBlock
                                Text="X"
                                TextAlignment="Center"
                                Background="Transparent">
                                <TextBlock.Foreground>
                                    <MultiBinding Converter="{StaticResource ICellToForegroundConverter}">
                                        <Binding/>
                                        <Binding Path="(dp:CanBeSelected.IsSelector)" ElementName="colors" Mode="OneWay"/>
                                        <Binding Path="(dp:CanBeSelected.SelectedColor)" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}" Mode="OneWay"/>
                                        <Binding Path="Nonogram.IsCorrect" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:MainWindow}}" Mode="OneWay"/>
                                    </MultiBinding>
                                </TextBlock.Foreground>
                            </TextBlock>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </Grid>
</Window>
